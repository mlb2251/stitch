{
  "cmd": "/home/kavi/mit/stitch/target/debug/deps/integration_tests-21175b69aaefd7be",
  "args": {
    "iterations": 1,
    "abstraction_prefix": "fn_",
    "previous_abstractions": 0,
    "shuffle": false,
    "truncate": null,
    "no_opt": false,
    "silent": false,
    "verbose_rewrite": false,
    "step": {
      "max_arity": 0,
      "threads": 1,
      "no_stats": false,
      "batch": 1,
      "dynamic_batch": false,
      "eta_long": false,
      "no_curried_metavars": false,
      "no_curried_bodies": false,
      "inv_candidates": 1,
      "hole_choice": "DepthFirst",
      "cost": {
        "cost_lam": 1,
        "cost_app": 1,
        "cost_var": 100,
        "cost_ivar": 100,
        "cost_prim_default": 100,
        "cost_prim": "{}"
      },
      "no_mismatch_check": false,
      "follow": null,
      "follow_types": null,
      "follow_prune": false,
      "verbose_worklist": false,
      "verbose_best": false,
      "print_stats": 0,
      "show_rewritten": false,
      "rewritten_dreamcoder": false,
      "rewritten_intermediates": false,
      "inv_arg_cap": false,
      "allow_single_task": false,
      "no_opt_single_use": false,
      "no_opt_upper_bound": false,
      "no_opt_force_multiuse": false,
      "no_opt_useless_abstract": false,
      "no_opt_arity_zero": false,
      "no_other_util": false,
      "structure_penalty": 1.0,
      "rewrite_check": false,
      "utility_by_rewrite": false,
      "dreamcoder_comparison": false,
      "quiet": false,
      "fused_lambda_tags": {
        "tags": null
      },
      "tdfa": {
        "tdfa_json_path": "test_data/dfa.json",
        "tdfa_root": "M",
        "valid_metavars": "[\"S\",\"E\",\"seqS\"]",
        "valid_roots": "[\"S\",\"E\",\"seqS\"]",
        "tdfa_non_eta_long_states": "{\"seqS\":\"S\"}",
        "tdfa_split": "~"
      },
      "symvar": {
        "symvar_prefix": "&"
      }
    }
  },
  "original_cost": 10704,
  "final_cost": 5654,
  "compression_ratio": 1.8931729748850372,
  "num_abstractions": 1,
  "original": [
    "(Module (/seq (Assign (list (Name &x:0 Store) (Name &y:0 Store) (Name &z:0 Store)) (Constant i0 None) None) (Expr (BinOp (BinOp (BinOp (BinOp (BinOp (Name &x:0 Load) Add (Name &x:0 Load)) Add (Name &x:0 Load)) Add (Name &y:0 Load)) Add (Name &y:0 Load)) Add (Name &z:0 Load)))) nil)",
    "(Module (/seq (Assign (list (Name &x:0 Store)) (Constant i0 None) None) (Assign (list (Name &y:0 Store)) (Constant i0 None) None) (Assign (list (Name &z:0 Store)) (Constant i0 None) None) (Expr (BinOp (BinOp (BinOp (BinOp (BinOp (Name &y:0 Load) Add (Name &y:0 Load)) Add (Name &y:0 Load)) Add (Name &x:0 Load)) Add (Name &x:0 Load)) Add (Name &z:0 Load)))) nil)"
  ],
  "rewritten": [
    "(Module (/seq (Assign (list (Name &x:0 Store) (Name &y:0 Store) (Name &z:0 Store)) (Constant i0 None) None) (fn_0 &z:0 &y:0 &x:0)) nil)",
    "(Module (/seq (Assign (list (Name &x:0 Store)) (Constant i0 None) None) (Assign (list (Name &y:0 Store)) (Constant i0 None) None) (Assign (list (Name &z:0 Store)) (Constant i0 None) None) (fn_0 &z:0 &x:0 &y:0)) nil)"
  ],
  "rewritten_dreamcoder": null,
  "abstractions": [
    {
      "body": "(Expr (BinOp (BinOp (BinOp (BinOp (BinOp (Name #2 Load) Add (Name #2 Load)) Add (Name #2 Load)) Add (Name #1 Load)) Add (Name #1 Load)) Add (Name #0 Load)))",
      "dreamcoder": "#(lambda (lambda (lambda (Expr (BinOp (BinOp (BinOp (BinOp (BinOp (Name $0 Load) Add (Name $0 Load)) Add (Name $0 Load)) Add (Name $1 Load)) Add (Name $1 Load)) Add (Name $2 Load))))))",
      "arity": 3,
      "name": "fn_0",
      "utility": 2722,
      "final_cost": 5654,
      "compression_ratio": 1.8931729748850372,
      "cumulative_compression_ratio": 1.8931729748850372,
      "num_uses": 2,
      "rewritten": null,
      "rewritten_dreamcoder": null,
      "uses": [
        {
          "fn_0 &z:0 &y:0 &x:0": "(Expr (BinOp (BinOp (BinOp (BinOp (BinOp (Name &x:0 Load) Add (Name &x:0 Load)) Add (Name &x:0 Load)) Add (Name &y:0 Load)) Add (Name &y:0 Load)) Add (Name &z:0 Load)))"
        },
        {
          "fn_0 &z:0 &x:0 &y:0": "(Expr (BinOp (BinOp (BinOp (BinOp (BinOp (Name &y:0 Load) Add (Name &y:0 Load)) Add (Name &y:0 Load)) Add (Name &x:0 Load)) Add (Name &x:0 Load)) Add (Name &z:0 Load)))"
        }
      ],
      "dc_comparison_millis": null,
      "tdfa_annotation": {
        "root_state": "S",
        "metavariable_states": [
          "Name",
          "Name",
          "Name"
        ]
      },
      "variable_types": [
        "S",
        "S",
        "S"
      ]
    }
  ]
}